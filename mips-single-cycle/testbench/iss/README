Instruction Set Simulator

The instruction set simulator is developed in C and supports the execution of the following instructions - 
ADD     
ADDU    
ADDI    
ADDIU   
AND     
ANDI    
BEQ     
BGEZ    
BGEZAL  
BGTZ    
BLEZ    
BLTZ    
BLTZAL  
BNE     
DIV     
DIVU    
J       
JAL     
JALR    
JR      
LB      
LBU     
LH      
LHU     
LUI     
LW      
MFHI    
MFLO    
MTHI    
MTLO    
MULT    
MULTU   
NOR     
OR      
ORI     
SB      
SH      
SW      
SLL     
SLLV    
SLT     
SLTI    
SLTIU   
SLTU    
SRA     
SRAV    
SRL     
SRLV    
SUB     
SUBU    
SYSCALL 
XOR     
XORI    

The simulator provides support for the hex generator tool and also supports the testbench by providing various API calls through DPI support in system verilog. 
The source code is organised in the following 
manner: 
testbench/iss/src/ - contains the .c and .h files
testbench/iss/lib/ - contains the lib files required

Currently, the simulator processes each instruction by first decoding it to decide whether it is a R-type or I-type or J-type instruction and then proceeds ahead with 
the execution by evaluating the case statement using  either the opcode field value of the instruction or the function field value, whichever is applicable. The 
simulator also supports the architecture register  dumps as well as the memory dump for a range of  addresses. These utility functions help in the debugging process. 
Please go through the source code to understand more about the implementation technique. The current simulator supports MIPS instruction set and support for other 
instruction set simulators (ARM, x86) is in progress!

Running the generated hex file on the simulator - 
Inside testbench/iss/ directory:
  make sim
  ./sim
 (Note: Make sure instr_hex file is present inside testbench/iss directory)
